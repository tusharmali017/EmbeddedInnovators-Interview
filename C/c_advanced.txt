Questions/Topics:
-----------------

1. Have you mostly coded from scratch, or have you also had to maintain code written by others?  What makes C code maintainable or not? 2. When you have had to deal with multiple instances of a structure, how did you organize them?  What factors were involved in your decision to do it that way? 3. How to you know when it is time to break a function down? 4. Have you had to work directly with special memory such as memory-mapped device I/O? (volatile) 5. How do you deal with fundamental data types like int having different sizes on different platforms? const (constexpr, etc.) 
6. Approaches to making assertions about program logic (assert()? static_assert()? other?) 

  
Programs:
---------
1. Reverse a string: void reverse(char *ptr)? time-complexity = O(?), space-complexity = O(?), in-place? 
2. Write a function to find the index of the third largest item in the array. time-complexity = O(?), space-complexity = O(?) 
3. Merge two sorted arrays? time-complexity = O(?), space-complexity = O(?), in-place? 
4. Merge two sorted singly linked lists? time-complexity = O(?), space-complexity = O(?), in-place? 
5. Search the Nth node to the end of a singly-linked-list? Two-pass? Or Single-pass? 
6. How to detect the cycle in a singly linked list? Two-pointers? 
